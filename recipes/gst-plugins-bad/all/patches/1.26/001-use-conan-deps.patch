diff --git a/sys/v4l2codecs/meson.build b/sys/v4l2codecs/meson.build
--- a/sys/v4l2codecs/meson.build
+++ b/sys/v4l2codecs/meson.build
@@ -44,12 +44,8 @@
   have_v4l2 = false
   message('V4L2 CODECs plugin is disabled')
 else
-  # Should only be built on Linux, check for Linux kernel headers even though
-  # we have our own copy.
-  have_v4l2 = cc.has_header('linux/videodev2.h')
-  if get_option('v4l2codecs').enabled() and not have_v4l2
-    error('V4L2i CODECs is requested but kernel headers were not found')
-  endif
+  libv4l2_dep = dependency('libv4l2', required: get_option('v4l2codecs'))
+  have_v4l2 = true
 
   # Find makedev in various header files. Different operating systems put the
   # macro in different header files.
@@ -67,7 +63,7 @@
     cpp_args: gst_plugins_bad_args,
     include_directories : [configinc],
     dependencies : [gstbase_dep, gstcodecs_dep, gstallocators_dep, libgudev_dep,
-                   gstpbutils_dep,],
+                   gstpbutils_dep, libv4l2_dep],
     install : true,
     install_dir : plugins_install_dir,
   )
diff --git a/ext/sctp/usrsctp/meson.build b/ext/sctp/usrsctp/meson.build
--- a/ext/sctp/usrsctp/meson.build
+++ b/ext/sctp/usrsctp/meson.build
@@ -147,9 +147,6 @@
 if false
     compile_args += ['-DINVARIANTS']
 endif
-if not gst_debug_disabled
-    compile_args += ['-DSCTP_DEBUG']
-endif
 # We do not need the socket API in GStreamer since we will wrap inside a
 # DTLS packet anyway, because we use SCTP for WebRTC data channels.
 if false
diff --git a/ext/faac/meson.build b/ext/faac/meson.build
--- a/ext/faac/meson.build
+++ b/ext/faac/meson.build
@@ -15,11 +15,8 @@
   'faac': pathsep.join(doc_sources)
 }
 
-faac_dep = cc.find_library('faac', required : get_option('faac'))
-have_faac_h = cc.has_header_symbol('faac.h', 'faacEncOpen')
-if not have_faac_h and get_option('faac').enabled()
-  error('faac plugin enabled: found libfaac, but not faac.h')
-endif
+faac_dep = dependency('faac', required : get_option('faac'))
+have_faac_h = true
 
 if faac_dep.found() and have_faac_h
   gstfaac = library('gstfaac',
diff --git a/ext/bz2/meson.build b/ext/bz2/meson.build
--- a/ext/bz2/meson.build
+++ b/ext/bz2/meson.build
@@ -18,9 +18,9 @@
   'bz2': pathsep.join(doc_sources)
 }
 
-bz2_dep = cc.find_library('bz2', required : get_option('bz2'))
+bz2_dep = dependency('bzip2', required : get_option('bz2'))
 
-if bz2_dep.found() and cc.has_header_symbol('bzlib.h', 'BZ2_bzlibVersion')
+if bz2_dep.found()
   gstbz2 = library('gstbz2',
     bz2_sources,
     c_args : gst_plugins_bad_args,
diff --git a/gst-libs/gst/vulkan/meson.build b/gst-libs/gst/vulkan/meson.build
--- a/gst-libs/gst/vulkan/meson.build
+++ b/gst-libs/gst/vulkan/meson.build
@@ -117,8 +117,8 @@
 endforeach
 
 if ['ios', 'darwin'].contains(host_system)
-  vulkan_dep = dependency('vulkan', method: 'pkg-config', required : false)
-  if not vulkan_dep.found()
+  vulkan_dep = dependency('vulkan', method: 'pkg-config', required : get_option('vulkan'))
+  if false
     # - ios does not support the loader/validation layers
     # - We need to link directly to MoltenVK to be able to use
     #   MoltenVK-specific functions that use dispatchable handles (like
@@ -126,9 +126,9 @@
     #   on implementing a proper Metal extension for Vulkan
     #   https://github.com/KhronosGroup/MoltenVK/issues/492
     objcpp = meson.get_compiler('objcpp')
-    vulkan_dep = objcpp.find_library('MoltenVK', required : vulkan_opt)
+    vulkan_dep = dependency('moltenvk', required : get_option('vulkan'))
   endif
-elif host_system == 'windows'
+elif false
   vulkan_root = run_command(python3, '-c', 'import os; print(os.environ.get("VK_SDK_PATH"))', check: false).stdout().strip()
   if vulkan_root != '' and vulkan_root != 'None'
     vulkan_lib_dir = ''
@@ -158,8 +158,8 @@
   endif
 endif
 
-if host_system != 'windows'
-  has_vulkan_header = cc.has_header('vulkan/vulkan_core.h', dependencies: vulkan_dep, required: vulkan_opt)
+if true
+    has_vulkan_header = true
 endif
 
 if 'x11' in vulkan_windowing_opt or 'auto' in vulkan_windowing_opt
@@ -285,7 +285,7 @@
   gdi_dep = cc.find_library('gdi32', required : vulkan_opt)
 
   # Cannot use internal dependency object with cc.has_header()
-  if gdi_dep.found() and cc.has_header('vulkan/vulkan_win32.h', args: '-I' + vulkan_inc_dir, required: vulkan_opt)
+  if gdi_dep.found() and cc.has_header('vulkan/vulkan_win32.h', dependencies : vulkan_dep, required: vulkan_opt)
     vulkan_priv_sources += ['win32/gstvkwindow_win32.c']
     optional_deps += [gdi_dep]
     vulkan_windowing = true
diff --git a/ext/zxing/gstzxing.cpp b/ext/zxing/gstzxing.cpp
--- a/ext/zxing/gstzxing.cpp
+++ b/ext/zxing/gstzxing.cpp
@@ -62,9 +62,9 @@
 
 #include <gst/video/video.h>
 
-#include "ReadBarcode.h"
-#include "TextUtfEncoding.h"
-#include "ZXVersion.h"
+#include "ZXing/ReadBarcode.h"
+#include "ZXing/TextUtfEncoding.h"
+#include "ZXing/ZXVersion.h"
 
 using namespace ZXing;
 
diff --git a/ext/sctp/meson.build b/ext/sctp/meson.build
--- a/ext/sctp/meson.build
+++ b/ext/sctp/meson.build
@@ -27,9 +27,9 @@
 
 sctp_platform_deps = []
 
-found_system_usrsctp = false
+found_system_usrsctp = true
 
-if not get_option('sctp-internal-usrsctp').enabled()
+if false
   sctp_dep = cc.find_library('usrsctp', required: false)
   sctp_header = cc.has_header('usrsctp.h')
   if host_system == 'windows'
@@ -58,13 +58,14 @@
   endif
 endif
 
-if not gst_debug_disabled
+if false
   sctp_args = ['-DSCTP_DEBUG']
 else
   sctp_args = []
 endif
 
-if sctp_dep.found() and sctp_header
+sctp_dep = dependency('usrsctp', required: true)
+if sctp_dep.found()
   gstsctp = library('gstsctp',
     sctp_sources,
     c_args : gst_plugins_bad_args + sctp_args,
diff --git a/sys/uvcgadget/meson.build b/sys/uvcgadget/meson.build
--- a/sys/uvcgadget/meson.build
+++ b/sys/uvcgadget/meson.build
@@ -26,10 +26,8 @@
 else
   # Should only be built on Linux, check for Linux kernel headers even though
   # we have our own copy.
-  have_v4l2 = cc.has_header('linux/videodev2.h') or cc.has_header('sys/videodev2.h') or cc.has_header('sys/videoio.h')
-  if get_option('uvcgadget').enabled() and not have_v4l2
-    error('UVCGADGET is requested but kernel headers were not found')
-  endif
+  libv4l2_dep = dependency('libv4l2', required: get_option('v4l2codecs'))
+  have_v4l2 = true
 
   # Find makedev in various header files. Different operating systems put the
   # macro in different header files.
@@ -45,7 +43,7 @@
     c_args : gst_plugins_bad_args,
     cpp_args: gst_plugins_bad_args,
     include_directories : [configinc, include_directories('../v4l2codecs')],
-    dependencies : [gstbase_dep, gstvideo_dep, gstallocators_dep, libgudev_dep, gstpbutils_dep,],
+    dependencies : [gstbase_dep, gstvideo_dep, gstallocators_dep, libgudev_dep, gstpbutils_dep, libv4l2_dep],
     install : true,
     install_dir : plugins_install_dir,
   )
diff --git a/sys/applemedia/meson.build b/sys/applemedia/meson.build
--- a/sys/applemedia/meson.build
+++ b/sys/applemedia/meson.build
@@ -136,7 +136,7 @@
 vulkan_option = get_option('vulkan')
 vk_required = applemedia_option.enabled() and vulkan_option.enabled()
 if gstvulkan_dep.found() and have_objcpp and not vulkan_option.disabled()
-  moltenvk_dep = objcpp.find_library('MoltenVK', required: vk_required)
+  moltenvk_dep = dependency('moltenvk', required : false)
   metal_dep = dependency('appleframeworks', modules : ['Metal'], required: vk_required)
   have_mvk_header = objcpp.has_header('MoltenVK/vk_mvk_moltenvk.h', required: vk_required)
   if metal_dep.found() and moltenvk_dep.found() and have_mvk_header
