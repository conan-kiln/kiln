diff --git src/cmake/add_oiio_plugin.cmake src/cmake/add_oiio_plugin.cmake
index f66bf756e..6cea07a17 100644
--- src/cmake/add_oiio_plugin.cmake
+++ src/cmake/add_oiio_plugin.cmake
@@ -75,7 +75,7 @@ macro (add_oiio_plugin)
             target_compile_options (${_plugin_NAME} PRIVATE ${_plugin_COMPILE_OPTIONS})
             target_include_directories (${_plugin_NAME} BEFORE PRIVATE ${_plugin_INCLUDE_DIRS})
             target_link_libraries (${_plugin_NAME} PUBLIC OpenImageIO
-                                                   PRIVATE ${_plugin_LINK_LIBRARIES})
+                                                   PUBLIC ${_plugin_LINK_LIBRARIES})
             set_target_properties (${_plugin_NAME} PROPERTIES PREFIX "" FOLDER "Plugins")
             install_targets (${_plugin_NAME})
         endif ()
diff --git src/heif.imageio/CMakeLists.txt src/heif.imageio/CMakeLists.txt
index 25606a139..5f520249a 100644
--- src/heif.imageio/CMakeLists.txt
+++ src/heif.imageio/CMakeLists.txt
@@ -2,32 +2,9 @@
 # SPDX-License-Identifier: Apache-2.0
 # https://github.com/AcademySoftwareFoundation/OpenImageIO
 
-if (Libheif_FOUND)
-    if (LINKSTATIC)
-        set (_static_suffixes .lib .a)    
-        set (_static_libraries_found 0)
-
-        foreach (_libeheif_library IN LISTS LIBHEIF_LIBRARIES)
-            get_filename_component (_ext ${_libeheif_library} LAST_EXT)
-            list (FIND _static_suffixes ${_ext} _index)
-            if (${_index} GREATER -1)
-                MATH (EXPR _static_libraries_found "${static_libraries_found}+1")
-            endif()
-        endforeach()
-
-        if (${_static_libraries_found} GREATER 0)
-            message (STATUS "${ColorYellow}")
-            message (STATUS "You are linking OpenImageIO against a static version of libheif, which is LGPL")
-            message (STATUS "licensed. If you intend to redistribute this build of OpenImageIO, we recommend")
-            message (STATUS "that you review the libheif license terms, or you may wish to switch to using a")
-            message (STATUS "dynamically-linked libheif.")
-            message ("${ColorReset}")
-        endif()
-    endif()
-
+if (USE_LIBHEIF)
     add_oiio_plugin (heifinput.cpp heifoutput.cpp
-                     INCLUDE_DIRS ${LIBHEIF_INCLUDES}
-                     LINK_LIBRARIES ${LIBHEIF_LIBRARIES}
+                     LINK_LIBRARIES libheif::heif
                      DEFINITIONS "USE_HEIF=1")
 else ()
     message (WARNING "heif plugin will not be built")
diff --git src/include/CMakeLists.txt src/include/CMakeLists.txt
index 3ab45a570..9b6511b78 100644
--- src/include/CMakeLists.txt
+++ src/include/CMakeLists.txt
@@ -49,7 +49,7 @@ install (FILES ${detail_headers}
          DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}/detail
          COMPONENT developer)
 
-if (OIIO_INTERNALIZE_FMT OR fmt_LOCAL_BUILD)
+if (0)
     set (fmt_headers_base_names)
     foreach (header_name core.h format-inl.h format.h ostream.h printf.h
              std.h base.h chrono.h)
diff --git src/ptex.imageio/CMakeLists.txt src/ptex.imageio/CMakeLists.txt
index 73e3ad843..da45e8c5f 100644
--- src/ptex.imageio/CMakeLists.txt
+++ src/ptex.imageio/CMakeLists.txt
@@ -2,12 +2,9 @@
 # SPDX-License-Identifier: Apache-2.0
 # https://github.com/AcademySoftwareFoundation/OpenImageIO
 
-if (Ptex_FOUND)
-    set(ptex_target Ptex::Ptex_dynamic)
-    if (TARGET Ptex::Ptex_static AND (NOT TARGET Ptex::Ptex_dynamic OR LINKSTATIC))
-        set(ptex_target Ptex::Ptex_static)
-    endif()
+if (USE_PTEX)
     add_oiio_plugin (ptexinput.cpp
-                     LINK_LIBRARIES ${ptex_target} ZLIB::ZLIB
+                     LINK_LIBRARIES ${ptex_LIBRARIES} ZLIB::ZLIB
+                     INCLUDE_DIRS ${ptex_INCLUDE_DIRS}
                      DEFINITIONS "USE_PTEX")
 endif ()
