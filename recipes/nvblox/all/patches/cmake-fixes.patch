--- a/nvblox/CMakeLists.txt
+++ b/nvblox/CMakeLists.txt
@@ -5,23 +5,6 @@
 # Include package deps
 list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
 find_package(CUDAToolkit REQUIRED)
-
-# Download thirdparty deps
-message(STATUS "Downloading 3rdparty dependencies")
-message(STATUS "Downloading GFLAGS")
-include(thirdparty/gflags/gflags.cmake)
-message(STATUS "Downloading SQLITE")
-include(thirdparty/sqlite/sqlite.cmake)
-message(STATUS "Downloading Eigen")
-include(thirdparty/eigen/eigen.cmake)
-message(STATUS "Downloading STDGPU")
-include(thirdparty/stdgpu/stdgpu.cmake)
-message(STATUS "Downloading GLOG")
-include(thirdparty/glog/glog.cmake)
-message(STATUS "Downloading GTEST")
-include(thirdparty/gtest/gtest.cmake)
-message(STATUS "Downloading benchmark")
-include(thirdparty/benchmark/benchmark.cmake)
 
 # Enable compiler warnings. We do this after inclusion of third party libraries
 # to avoid warnings we have no control over TODO(dtingdahl) Fix pytorch warnings
@@ -194,7 +177,7 @@
 include(GNUInstallDirs)
 
 install(
-  TARGETS nvblox_lib nvblox_datasets nvblox_eigen fuse_3dmatch fuse_replica
+  TARGETS nvblox_lib nvblox_datasets fuse_3dmatch fuse_replica
   EXPORT nvbloxTargets
   ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}/${PROJECT_NAME}
   LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
@@ -206,9 +189,3 @@
         DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
 install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/executables/include/
         DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
-install(
-  DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/eigen/include/eigen3
-  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
-  PATTERN "*/unsupported**" EXCLUDE)
-install(DIRECTORY ${ext_stdgpu_SOURCE_DIR}/src/
-        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
