--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.9)
+cmake_minimum_required(VERSION 3.18)
 project(jitify LANGUAGES CXX CUDA)
 
 option(ASAN "Enable address sanitizer in debug build" ON)
@@ -43,6 +43,7 @@
   set(CMAKE_CUDA_FLAGS_DEBUG "${CMAKE_CUDA_FLAGS_DEBUG} -g")
 endif()
 
+if(0)
 find_package(CUDA REQUIRED) # Required for CUDA_INCLUDE_DIRS
 
 # Add macro definitions used in tests.
@@ -51,12 +52,14 @@
     CUB_DIR=${CUDA_INC_DIR})
 # Copy the example_headers directory for use at runtime by tests.
 file(COPY example_headers DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
+endif()
 
 # Windows requires linking to DbgHelp for UnDecorateSymbolName.
 if (MSVC)
 link_libraries(DbgHelp)
 endif()
 
+if(0)
 # -----------
 # Google Test
 # -----------
@@ -91,6 +94,9 @@
 add_subdirectory(${CMAKE_CURRENT_BINARY_DIR}/nvtx-src/c
                  ${CMAKE_CURRENT_BINARY_DIR}/nvtx-build
                  EXCLUDE_FROM_ALL)
+endif()
+
+find_package(CUDAToolkit REQUIRED)
 
 # ----
 # Executable utilities
@@ -104,11 +110,22 @@
       DEPENDS stringify)
 endfunction()
 add_executable(jitify2_preprocess jitify2_preprocess.cpp)
-target_include_directories(jitify2_preprocess PRIVATE ${CUDA_INCLUDE_DIRS})
+target_link_libraries(jitify2_preprocess PRIVATE CUDA::nvrtc)
+target_compile_definitions(jitify2_preprocess PRIVATE _FILE_OFFSET_BITS=64)
+if (CUDAToolkit_VERSION VERSION_GREATER_EQUAL 12)
+  target_link_libraries(jitify2_preprocess PRIVATE CUDA::nvJitLink)
+endif()
+if(ENABLE_NVTX)
+  target_link_libraries(jitify2_preprocess PRIVATE CUDA::nvtx3)
+  target_compile_definitions(jitify2_preprocess PRIVATE JITIFY_ENABLE_NVTX=1)
+endif()
 if (NOT WIN32)
   find_package(Threads REQUIRED)
   target_link_libraries(jitify2_preprocess PRIVATE ${CMAKE_DL_LIBS} ${CMAKE_THREAD_LIBS_INIT})
 endif()
+
+install(TARGETS jitify2_preprocess stringify DESTINATION bin)
+return()
 
 # ----
 # Generate files for use in tests
