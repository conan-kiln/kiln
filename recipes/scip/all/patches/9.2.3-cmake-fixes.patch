diff --git a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -128,13 +128,15 @@
     else()
         message(STATUS "Support SYM: sassy+bliss")
         set(sym symmetry/compute_symmetry_sassy_bliss.cpp symmetry/build_sassy_graph.cpp)
-        set(CMAKE_CXX_STANDARD 17)
+        find_package(sassy REQUIRED)
+        list(APPEND SYM_LIBRARIES sassy::sassy)
+        list(APPEND SYM_PIC_LIBRARIES sassy::sassy)
     endif()
 
-    find_package(Bliss CONFIG HINTS ${BLISS_DIR})
+    find_package(Bliss CONFIG REQUIRED)
     if(Bliss_FOUND)
-        set(SYM_LIBRARIES Bliss::libbliss)
-        set(SYM_PIC_LIBRARIES Bliss::libbliss)
+        list(APPEND SYM_LIBRARIES bliss::bliss)
+        list(APPEND SYM_PIC_LIBRARIES bliss::bliss)
         message(STATUS "Found Bliss: ${Bliss_DIR}")
     else()
         # Utilities to automatically download missing dependencies
@@ -166,10 +168,10 @@
         message(STATUS "Installed Bliss in: ${CMAKE_BINARY_DIR}/_deps/local")
     endif()
 elseif(SYM STREQUAL "nauty" OR SYM STREQUAL "snauty")
-    if(NAUTY_DIR)
-        include_directories(${NAUTY_DIR})
-        set(SYM_LIBRARIES ${NAUTY_DIR}/nauty/nauty.a)
-        set(SYM_PIC_LIBRARIES ${NAUTY_DIR}/nauty/nauty.a)
+    if(TRUE)
+        find_package(nauty REQUIRED)
+        set(SYM_LIBRARIES nauty::nauty)
+        set(SYM_PIC_LIBRARIES nauty::nauty)
     else()
         include_directories(src/nauty)
         set(sym nauty/nauty.c nauty/nautil.c nauty/nausparse.c nauty/schreier.c nauty/naurng.c)
@@ -180,8 +182,9 @@
     elseif(SYM STREQUAL "snauty")
         message(STATUS "Support SYM: sassy+nauty")
         set(sym ${sym} symmetry/compute_symmetry_sassy_nauty.cpp symmetry/build_sassy_graph.cpp)
-        # sassy needs C++-17
-        set(CMAKE_CXX_STANDARD 17)
+        find_package(sassy REQUIRED)
+        list(APPEND SYM_LIBRARIES sassy::sassy)
+        list(APPEND SYM_PIC_LIBRARIES sassy::sassy)
     endif()
 elseif(SYM STREQUAL "none")
     message(STATUS "Support SYM: OFF")
@@ -273,22 +276,19 @@
 endif()
 
 #set sources files, libraries and defines for tpi
+find_package(tinycthread REQUIRED)
+link_libraries(tinycthread::tinycthread)
 if(TPI STREQUAL "none")
     set(tpisources tpi/tpi_none.c)
     set(THREAD_LIBRARIES "")
     set(TPI_NONE on)
 elseif(TPI STREQUAL "tny")
     set(TPI_TNY on)
-    set(tpisources tpi/tpi_tnycthrd.c tinycthread/tinycthread.c)
-    find_package(Threads REQUIRED)
-    set(THREAD_LIBRARIES ${CMAKE_THREAD_LIBS_INIT})
 elseif(TPI STREQUAL "omp")
     set(TPI_OMP on)
     set(tpisources tpi/tpi_openmp.c)
     find_package(OpenMP REQUIRED)
-    set(THREAD_LIBRARIES "")
-    add_compile_options("$<$<COMPILE_LANGUAGE:C>:${OpenMP_C_FLAGS}>$<$<COMPILE_LANGUAGE:CXX>:${OpenMP_CXX_FLAGS}>")
-    add_link_options("${OpenMP_CXX_FLAGS}")
+    link_libraries(OpenMP::OpenMP_CXX)
 else()
     message(FATAL_ERROR "TPI option has wrong value")
 endif()
@@ -403,6 +403,7 @@
 if(PAPILO_FOUND)
     message(STATUS "Finding PAPILO - found")
     set(SCIP_WITH_PAPILO ON)
+    link_libraries(papilo::papilo)
 else()
     message(STATUS "Support PAPILO: OFF")
     set(PAPILO_IMPORTED_TARGETS "")
@@ -413,7 +414,7 @@
 message(STATUS "Finding Solver \"${LPS}\"")
 if(LPS STREQUAL "spx")
     message(STATUS "Finding Soplex")
-    find_package(SOPLEX CONFIG HINTS ${SOPLEX_DIR})
+    find_package(SOPLEX CONFIG REQUIRED)
     if(NOT SOPLEX_FOUND)
         # Utilities to automatically download missing dependencies
         include(cmake/Dependencies.cmake)
@@ -653,8 +654,9 @@
 
 if(AMPL)
     set(SCIP_WITH_AMPL ON)
-    include_directories(BEFORE ${CMAKE_CURRENT_SOURCE_DIR}/src/amplmp/include)
-    set(amplsrc scip/reader_nl.cpp amplmp/src/format.cpp amplmp/src/expr-info.cpp amplmp/src/nl-reader.cpp amplmp/src/os.cpp amplmp/src/posix.cpp)
+    find_package(ampl-mp REQUIRED)
+    link_libraries(ampl-mp::ampl-mp)
+    set(amplsrc scip/reader_nl.cpp)
 else()
     message(STATUS "Support AMPL: OFF")
     set(SCIP_WITH_AMPL OFF)
